

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Jan 08 22:09:06 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F627A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 22/03/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F627A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0015                     	;# 
    67     0015                     	;# 
    68     0016                     	;# 
    69     0017                     	;# 
    70     0018                     	;# 
    71     0019                     	;# 
    72     001A                     	;# 
    73     001F                     	;# 
    74     0081                     	;# 
    75     0085                     	;# 
    76     0086                     	;# 
    77     008C                     	;# 
    78     008E                     	;# 
    79     0092                     	;# 
    80     0098                     	;# 
    81     0099                     	;# 
    82     009A                     	;# 
    83     009B                     	;# 
    84     009C                     	;# 
    85     009D                     	;# 
    86     009F                     	;# 
    87     0000                     	;# 
    88     0001                     	;# 
    89     0002                     	;# 
    90     0003                     	;# 
    91     0004                     	;# 
    92     0005                     	;# 
    93     0006                     	;# 
    94     000A                     	;# 
    95     000B                     	;# 
    96     000C                     	;# 
    97     000E                     	;# 
    98     000E                     	;# 
    99     000F                     	;# 
   100     0010                     	;# 
   101     0011                     	;# 
   102     0012                     	;# 
   103     0015                     	;# 
   104     0015                     	;# 
   105     0016                     	;# 
   106     0017                     	;# 
   107     0018                     	;# 
   108     0019                     	;# 
   109     001A                     	;# 
   110     001F                     	;# 
   111     0081                     	;# 
   112     0085                     	;# 
   113     0086                     	;# 
   114     008C                     	;# 
   115     008E                     	;# 
   116     0092                     	;# 
   117     0098                     	;# 
   118     0099                     	;# 
   119     009A                     	;# 
   120     009B                     	;# 
   121     009C                     	;# 
   122     009D                     	;# 
   123     009F                     	;# 
   124                           
   125                           	psect	strings
   126     0001                     __pstrings:
   127     0001                     stringtab:
   128     0001                     __stringtab:
   129     0001                     stringcode:	
   130                           ;	String table - string pointers are 1 byte each
   131                           
   132     0001                     stringdir:
   133     0001  3000               	movlw	high stringdir
   134     0002  008A               	movwf	10
   135     0003  0804               	movf	4,w
   136     0004  0A84               	incf	4,f
   137     0005  0782               	addwf	2,f
   138     0006                     __stringbase:
   139     0006  3400               	retlw	0
   140     0007                     __end_of__stringtab:
   141     0007                     _pause_cmd:
   142     0007  347E               	retlw	126
   143     0008  34FF               	retlw	255
   144     0009  3406               	retlw	6
   145     000A  340E               	retlw	14
   146     000B  3400               	retlw	0
   147     000C  3400               	retlw	0
   148     000D  3400               	retlw	0
   149     000E  34EF               	retlw	239
   150     000F                     __end_of_pause_cmd:
   151     0005                     _PORTAbits	set	5
   152     0006                     _PORTBbits	set	6
   153     0019                     _TXREG	set	25
   154     0018                     _RCSTAbits	set	24
   155     001F                     _CMCONbits	set	31
   156     0099                     _SPBRG	set	153
   157     0098                     _TXSTAbits	set	152
   158     0435                     _TRISB5	set	1077
   159     0430                     _TRISB0	set	1072
   160     042F                     _TRISA7	set	1071
   161     0429                     _TRISA1	set	1065
   162     0428                     _TRISA0	set	1064
   163     0432                     _TRISB2	set	1074
   164     0431                     _TRISB1	set	1073
   165                           
   166                           	psect	cinit
   167     03F6                     start_initialization:	
   168                           ; #config settings
   169                           
   170     03F6                     __initialization:
   171                           
   172                           ; Clear objects allocated to COMMON
   173     03F6  01F0               	clrf	__pbssCOMMON& (0+127)
   174     03F7  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   175     03F8  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   176     03F9  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   177     03FA  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   178     03FB  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   179     03FC  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   180     03FD  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   181     03FE                     end_of_initialization:	
   182                           ;End of C runtime variable initialization code
   183                           
   184     03FE                     __end_of__initialization:
   185     03FE  0183               	clrf	3
   186     03FF  2B6C               	ljmp	_main	;jump to C main() function
   187                           
   188                           	psect	bssCOMMON
   189     0070                     __pbssCOMMON:
   190     0070                     UART_transmit@F564:
   191     0070                     	ds	8
   192                           
   193                           	psect	cstackCOMMON
   194     0078                     __pcstackCOMMON:
   195     0078                     ?_init:
   196     0078                     ??_init:	
   197                           ; 1 bytes @ 0x0
   198                           
   199     0078                     ?_UART_transmit:	
   200                           ; 1 bytes @ 0x0
   201                           
   202     0078                     ?_Flash:	
   203                           ; 1 bytes @ 0x0
   204                           
   205     0078                     ??_Flash:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0078                     ?_main:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0078                     UART_transmit@feedback:	
   212                           ; 1 bytes @ 0x0
   213                           
   214                           
   215                           ; 1 bytes @ 0x0
   216     0078                     	ds	1
   217     0079                     UART_transmit@par1:
   218                           
   219                           ; 1 bytes @ 0x1
   220     0079                     	ds	1
   221     007A                     UART_transmit@par2:
   222                           
   223                           ; 1 bytes @ 0x2
   224     007A                     	ds	1
   225     007B                     ??_UART_transmit:
   226                           
   227                           ; 1 bytes @ 0x3
   228     007B                     	ds	2
   229     007D                     ??_main:
   230                           
   231                           	psect	cstackBANK0
   232     0020                     __pcstackBANK0:	
   233                           ; 1 bytes @ 0x5
   234                           
   235     0020                     UART_transmit@cmd:
   236                           
   237                           ; 8 bytes @ 0x0
   238     0020                     	ds	8
   239     0028                     UART_transmit@i_186:
   240                           
   241                           ; 2 bytes @ 0x8
   242     0028                     	ds	2
   243     002A                     UART_transmit@i:
   244                           
   245                           ; 2 bytes @ 0xA
   246     002A                     	ds	2
   247     002C                     UART_transmit@CMD:
   248                           
   249                           ; 1 bytes @ 0xC
   250     002C                     	ds	1
   251                           
   252                           	psect	maintext
   253     036C                     __pmaintext:	
   254 ;;
   255 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   256 ;;
   257 ;; *************** function _main *****************
   258 ;; Defined at:
   259 ;;		line 83 in file "main.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;		None
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   268 ;; Tracked objects:
   269 ;;		On entry : B00/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   273 ;;      Params:         0       0       0       0
   274 ;;      Locals:         0       0       0       0
   275 ;;      Temps:          0       0       0       0
   276 ;;      Totals:         0       0       0       0
   277 ;;Total ram usage:        0 bytes
   278 ;; Hardware stack levels required when called: 2
   279 ;; This function calls:
   280 ;;		_Flash
   281 ;;		_UART_transmit
   282 ;;		_init
   283 ;; This function is called by:
   284 ;;		Startup code after reset
   285 ;; This function uses a non-reentrant model
   286 ;;
   287                           
   288     036C                     _main:	
   289                           ;psect for function _main
   290                           
   291     036C                     l774:	
   292                           ;incstack = 0
   293                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   294                           
   295                           
   296                           ;main.c: 85:     init();
   297     036C  234C               	fcall	_init
   298     036D                     l776:
   299                           
   300                           ;main.c: 88:         if (PORTAbits.RA0){
   301     036D  1283               	bcf	3,5	;RP0=0, select bank0
   302     036E  1303               	bcf	3,6	;RP1=0, select bank0
   303     036F  1C05               	btfss	5,0	;volatile
   304     0370  2B72               	goto	u121
   305     0371  2B73               	goto	u120
   306     0372                     u121:
   307     0372  2B6D               	goto	l776
   308     0373                     u120:
   309     0373                     l54:
   310     0373  1805               	btfsc	5,0	;volatile
   311     0374  2B76               	goto	u131
   312     0375  2B77               	goto	u130
   313     0376                     u131:
   314     0376  2B73               	goto	l54
   315     0377                     u130:
   316     0377  2B86               	goto	l786
   317     0378                     l58:
   318                           
   319                           ;main.c: 91:                 if (PORTBbits.RB0){
   320     0378  1C06               	btfss	6,0	;volatile
   321     0379  2B7B               	goto	u141
   322     037A  2B7C               	goto	u140
   323     037B                     u141:
   324     037B  2B86               	goto	l786
   325     037C                     u140:
   326     037C                     l60:
   327     037C  1806               	btfsc	6,0	;volatile
   328     037D  2B7F               	goto	u151
   329     037E  2B80               	goto	u150
   330     037F                     u151:
   331     037F  2B7C               	goto	l60
   332     0380                     u150:
   333     0380                     l782:
   334                           
   335                           ;main.c: 93:                     UART_transmit(pause_cmd, 0x00, 0x00, 0x00);
   336     0380  01F8               	clrf	UART_transmit@feedback
   337     0381  01F9               	clrf	UART_transmit@par1
   338     0382  01FA               	clrf	UART_transmit@par2
   339     0383  3001               	movlw	(low ((_pause_cmd-__stringbase)| (0+32768)))& (0+255)
   340     0384  238E               	fcall	_UART_transmit
   341     0385                     l784:
   342                           
   343                           ;main.c: 94:                     Flash();
   344     0385  2338               	fcall	_Flash
   345     0386                     l786:
   346                           
   347                           ;main.c: 90:             while(!PORTAbits.RA7){
   348     0386  1283               	bcf	3,5	;RP0=0, select bank0
   349     0387  1303               	bcf	3,6	;RP1=0, select bank0
   350     0388  1F85               	btfss	5,7	;volatile
   351     0389  2B8B               	goto	u161
   352     038A  2B8C               	goto	u160
   353     038B                     u161:
   354     038B  2B78               	goto	l58
   355     038C                     u160:
   356     038C  2B6D               	goto	l776
   357     038D  2800               	ljmp	start
   358     038E                     __end_of_main:
   359                           
   360                           	psect	text1
   361     034C                     __ptext1:	
   362 ;; *************** function _init *****************
   363 ;; Defined at:
   364 ;;		line 29 in file "main.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;		None
   367 ;; Auto vars:     Size  Location     Type
   368 ;;		None
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg, status,2, status,0
   373 ;; Tracked objects:
   374 ;;		On entry : 0/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   378 ;;      Params:         0       0       0       0
   379 ;;      Locals:         0       0       0       0
   380 ;;      Temps:          0       0       0       0
   381 ;;      Totals:         0       0       0       0
   382 ;;Total ram usage:        0 bytes
   383 ;; Hardware stack levels used: 1
   384 ;; This function calls:
   385 ;;		Nothing
   386 ;; This function is called by:
   387 ;;		_main
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391     034C                     _init:	
   392                           ;psect for function _init
   393                           
   394     034C                     l658:	
   395                           ;incstack = 0
   396                           ; Regs used in _init: [wreg+status,2+status,0]
   397                           
   398                           
   399                           ;main.c: 31:     CMCONbits.CM = 0b111;
   400     034C  3007               	movlw	7
   401     034D  1283               	bcf	3,5	;RP0=0, select bank0
   402     034E  1303               	bcf	3,6	;RP1=0, select bank0
   403     034F  049F               	iorwf	31,f	;volatile
   404     0350                     l660:
   405                           
   406                           ;main.c: 32:     CMCONbits.CIS = 0;
   407     0350  119F               	bcf	31,3	;volatile
   408     0351                     l662:
   409                           
   410                           ;main.c: 33:     CMCONbits.C1INV = 0;
   411     0351  121F               	bcf	31,4	;volatile
   412     0352                     l664:
   413                           
   414                           ;main.c: 34:     CMCONbits.C2INV = 0;
   415     0352  129F               	bcf	31,5	;volatile
   416     0353                     l666:
   417                           
   418                           ;main.c: 37:     TRISB1 = 1;
   419     0353  1683               	bsf	3,5	;RP0=1, select bank1
   420     0354  1303               	bcf	3,6	;RP1=0, select bank1
   421     0355  1486               	bsf	6,1	;volatile
   422     0356                     l668:
   423                           
   424                           ;main.c: 38:     TRISB2 = 0;
   425     0356  1106               	bcf	6,2	;volatile
   426     0357                     l670:
   427                           
   428                           ;main.c: 39:     RCSTAbits.SPEN = 1;
   429     0357  1283               	bcf	3,5	;RP0=0, select bank0
   430     0358  1303               	bcf	3,6	;RP1=0, select bank0
   431     0359  1798               	bsf	24,7	;volatile
   432     035A                     l672:
   433                           
   434                           ;main.c: 41:     TXSTAbits.SYNC = 0;
   435     035A  1683               	bsf	3,5	;RP0=1, select bank1
   436     035B  1303               	bcf	3,6	;RP1=0, select bank1
   437     035C  1218               	bcf	24,4	;volatile
   438     035D                     l674:
   439                           
   440                           ;main.c: 42:     TXSTAbits.BRGH = 1;
   441     035D  1518               	bsf	24,2	;volatile
   442     035E                     l676:
   443                           
   444                           ;main.c: 44:     TXSTAbits.TXEN = 1;
   445     035E  1698               	bsf	24,5	;volatile
   446     035F                     l678:
   447                           
   448                           ;main.c: 45:     RCSTAbits.CREN = 0;
   449     035F  1283               	bcf	3,5	;RP0=0, select bank0
   450     0360  1303               	bcf	3,6	;RP1=0, select bank0
   451     0361  1218               	bcf	24,4	;volatile
   452     0362                     l680:
   453                           
   454                           ;main.c: 48:     SPBRG = 25;
   455     0362  3019               	movlw	25
   456     0363  1683               	bsf	3,5	;RP0=1, select bank1
   457     0364  1303               	bcf	3,6	;RP1=0, select bank1
   458     0365  0099               	movwf	25	;volatile
   459     0366                     l682:
   460                           
   461                           ;main.c: 51:     TRISA0 = 1;
   462     0366  1405               	bsf	5,0	;volatile
   463     0367                     l684:
   464                           
   465                           ;main.c: 52:     TRISA1 = 0;
   466     0367  1085               	bcf	5,1	;volatile
   467     0368                     l686:
   468                           
   469                           ;main.c: 53:     TRISA7 = 1;
   470     0368  1785               	bsf	5,7	;volatile
   471     0369                     l688:
   472                           
   473                           ;main.c: 54:     TRISB0 = 1;
   474     0369  1406               	bsf	6,0	;volatile
   475     036A                     l690:
   476                           
   477                           ;main.c: 55:     TRISB5 = 0;
   478     036A  1286               	bcf	6,5	;volatile
   479     036B                     l35:
   480     036B  0008               	return
   481     036C                     __end_of_init:
   482                           
   483                           	psect	text2
   484     038E                     __ptext2:	
   485 ;; *************** function _UART_transmit *****************
   486 ;; Defined at:
   487 ;;		line 60 in file "main.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;  CMD             1    wreg     PTR unsigned char 
   490 ;;		 -> pause_cmd(8), 
   491 ;;  feedback        1    0[COMMON] unsigned char 
   492 ;;  par1            1    1[COMMON] unsigned char 
   493 ;;  par2            1    2[COMMON] unsigned char 
   494 ;; Auto vars:     Size  Location     Type
   495 ;;  CMD             1   12[BANK0 ] PTR unsigned char 
   496 ;;		 -> pause_cmd(8), 
   497 ;;  i               2    8[BANK0 ] int 
   498 ;;  i               2   10[BANK0 ] int 
   499 ;;  cmd             8    0[BANK0 ] unsigned char [8]
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   509 ;;      Params:         3       0       0       0
   510 ;;      Locals:         0      13       0       0
   511 ;;      Temps:          2       0       0       0
   512 ;;      Totals:         5      13       0       0
   513 ;;Total ram usage:       18 bytes
   514 ;; Hardware stack levels used: 2
   515 ;; This function calls:
   516 ;;		Nothing
   517 ;; This function is called by:
   518 ;;		_main
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522     038E                     _UART_transmit:	
   523                           ;psect for function _UART_transmit
   524                           
   525                           
   526                           ;incstack = 0
   527                           ; Regs used in _UART_transmit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
   528                           ;UART_transmit@CMD stored from wreg
   529     038E  1283               	bcf	3,5	;RP0=0, select bank0
   530     038F  1303               	bcf	3,6	;RP1=0, select bank0
   531     0390  00AC               	movwf	UART_transmit@CMD
   532     0391                     l744:
   533                           
   534                           ;main.c: 62:     unsigned char cmd[8] = {0};
   535     0391  3020               	movlw	UART_transmit@cmd& (0+255)
   536     0392  0084               	movwf	4
   537     0393  3008               	movlw	8
   538     0394  00FF               	movwf	btemp+1
   539     0395                     u90:
   540     0395  1383               	bcf	3,7	;select IRP bank0
   541     0396  0180               	clrf	0
   542     0397  0A84               	incf	4,f
   543     0398  0BFF               	decfsz	btemp+1,f
   544     0399  2B95               	goto	u90
   545     039A                     l746:
   546                           
   547                           ;main.c: 63:     for (int i = 0; i < 8; i++){
   548     039A  01AA               	clrf	UART_transmit@i
   549     039B  01AB               	clrf	UART_transmit@i+1
   550     039C                     l752:
   551                           
   552                           ;main.c: 64:         cmd[i] = CMD[i];
   553     039C  1283               	bcf	3,5	;RP0=0, select bank0
   554     039D  1303               	bcf	3,6	;RP1=0, select bank0
   555     039E  082A               	movf	UART_transmit@i,w
   556     039F  072C               	addwf	UART_transmit@CMD,w
   557     03A0  0084               	movwf	4
   558     03A1  2001               	fcall	stringdir
   559     03A2  00FB               	movwf	??_UART_transmit
   560     03A3  082A               	movf	UART_transmit@i,w
   561     03A4  3E20               	addlw	(low (UART_transmit@cmd| 0))& (0+255)
   562     03A5  0084               	movwf	4
   563     03A6  087B               	movf	??_UART_transmit,w
   564     03A7  1383               	bcf	3,7	;select IRP bank0
   565     03A8  0080               	movwf	0
   566     03A9                     l754:
   567                           
   568                           ;main.c: 65:     };
   569     03A9  3001               	movlw	1
   570     03AA  07AA               	addwf	UART_transmit@i,f
   571     03AB  1803               	skipnc
   572     03AC  0AAB               	incf	UART_transmit@i+1,f
   573     03AD  3000               	movlw	0
   574     03AE  07AB               	addwf	UART_transmit@i+1,f
   575     03AF                     l756:
   576     03AF  082B               	movf	UART_transmit@i+1,w
   577     03B0  3A80               	xorlw	128
   578     03B1  00FF               	movwf	btemp+1
   579     03B2  3080               	movlw	128
   580     03B3  027F               	subwf	btemp+1,w
   581     03B4  1D03               	skipz
   582     03B5  2BB8               	goto	u105
   583     03B6  3008               	movlw	8
   584     03B7  022A               	subwf	UART_transmit@i,w
   585     03B8                     u105:
   586     03B8  1C03               	skipc
   587     03B9  2BBB               	goto	u101
   588     03BA  2BBC               	goto	u100
   589     03BB                     u101:
   590     03BB  2B9C               	goto	l752
   591     03BC                     u100:
   592     03BC                     l758:
   593                           
   594                           ;main.c: 67:     cmd[4] = CMD[4];
   595     03BC  1283               	bcf	3,5	;RP0=0, select bank0
   596     03BD  1303               	bcf	3,6	;RP1=0, select bank0
   597     03BE  082C               	movf	UART_transmit@CMD,w
   598     03BF  3E04               	addlw	4
   599     03C0  0084               	movwf	4
   600     03C1  2001               	fcall	stringdir
   601     03C2  00A4               	movwf	UART_transmit@cmd+4
   602                           
   603                           ;main.c: 68:     cmd[5] = CMD[5];
   604     03C3  082C               	movf	UART_transmit@CMD,w
   605     03C4  3E05               	addlw	5
   606     03C5  0084               	movwf	4
   607     03C6  2001               	fcall	stringdir
   608     03C7  00A5               	movwf	UART_transmit@cmd+5
   609                           
   610                           ;main.c: 69:     cmd[6] = CMD[6];
   611     03C8  082C               	movf	UART_transmit@CMD,w
   612     03C9  3E06               	addlw	6
   613     03CA  0084               	movwf	4
   614     03CB  2001               	fcall	stringdir
   615     03CC  00A6               	movwf	UART_transmit@cmd+6
   616     03CD                     l760:
   617                           
   618                           ;main.c: 71:     for (int i = 0; i < 8; i++) {
   619     03CD  01A8               	clrf	UART_transmit@i_186
   620     03CE  01A9               	clrf	UART_transmit@i_186+1
   621     03CF                     l766:
   622                           
   623                           ;main.c: 72:         TXREG = cmd[i];
   624     03CF  1283               	bcf	3,5	;RP0=0, select bank0
   625     03D0  1303               	bcf	3,6	;RP1=0, select bank0
   626     03D1  0828               	movf	UART_transmit@i_186,w
   627     03D2  3E20               	addlw	(low (UART_transmit@cmd| 0))& (0+255)
   628     03D3  0084               	movwf	4
   629     03D4  1383               	bcf	3,7	;select IRP bank0
   630     03D5  0800               	movf	0,w
   631     03D6  0099               	movwf	25	;volatile
   632     03D7                     l768:
   633                           
   634                           ;main.c: 73:         _delay((unsigned long)((5)*(16000000/4000.0)));
   635     03D7  301A               	movlw	26
   636     03D8  00FC               	movwf	??_UART_transmit+1
   637     03D9  30F8               	movlw	248
   638     03DA  00FB               	movwf	??_UART_transmit
   639     03DB                     u177:
   640     03DB  0BFB               	decfsz	??_UART_transmit,f
   641     03DC  2BDB               	goto	u177
   642     03DD  0BFC               	decfsz	??_UART_transmit+1,f
   643     03DE  2BDB               	goto	u177
   644     03DF  0000               	nop
   645     03E0                     l770:
   646                           
   647                           ;main.c: 74:     };
   648     03E0  3001               	movlw	1
   649     03E1  1283               	bcf	3,5	;RP0=0, select bank0
   650     03E2  1303               	bcf	3,6	;RP1=0, select bank0
   651     03E3  07A8               	addwf	UART_transmit@i_186,f
   652     03E4  1803               	skipnc
   653     03E5  0AA9               	incf	UART_transmit@i_186+1,f
   654     03E6  3000               	movlw	0
   655     03E7  07A9               	addwf	UART_transmit@i_186+1,f
   656     03E8                     l772:
   657     03E8  0829               	movf	UART_transmit@i_186+1,w
   658     03E9  3A80               	xorlw	128
   659     03EA  00FF               	movwf	btemp+1
   660     03EB  3080               	movlw	128
   661     03EC  027F               	subwf	btemp+1,w
   662     03ED  1D03               	skipz
   663     03EE  2BF1               	goto	u115
   664     03EF  3008               	movlw	8
   665     03F0  0228               	subwf	UART_transmit@i_186,w
   666     03F1                     u115:
   667     03F1  1C03               	skipc
   668     03F2  2BF4               	goto	u111
   669     03F3  2BF5               	goto	u110
   670     03F4                     u111:
   671     03F4  2BCF               	goto	l766
   672     03F5                     u110:
   673     03F5                     l44:
   674     03F5  0008               	return
   675     03F6                     __end_of_UART_transmit:
   676                           
   677                           	psect	text3
   678     0338                     __ptext3:	
   679 ;; *************** function _Flash *****************
   680 ;; Defined at:
   681 ;;		line 77 in file "main.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   695 ;;      Params:         0       0       0       0
   696 ;;      Locals:         0       0       0       0
   697 ;;      Temps:          3       0       0       0
   698 ;;      Totals:         3       0       0       0
   699 ;;Total ram usage:        3 bytes
   700 ;; Hardware stack levels used: 1
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_main
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708     0338                     _Flash:	
   709                           ;psect for function _Flash
   710                           
   711     0338                     l724:	
   712                           ;incstack = 0
   713                           ; Regs used in _Flash: [wreg]
   714                           
   715                           
   716                           ;main.c: 78:     PORTBbits.RB5 = 1;
   717     0338  1283               	bcf	3,5	;RP0=0, select bank0
   718     0339  1303               	bcf	3,6	;RP1=0, select bank0
   719     033A  1686               	bsf	6,5	;volatile
   720     033B                     l726:
   721                           
   722                           ;main.c: 79:     _delay((unsigned long)((500)*(16000000/4000.0)));
   723     033B  300B               	movlw	11
   724     033C  00FA               	movwf	??_Flash+2
   725     033D  3026               	movlw	38
   726     033E  00F9               	movwf	??_Flash+1
   727     033F  305D               	movlw	93
   728     0340  00F8               	movwf	??_Flash
   729     0341                     u187:
   730     0341  0BF8               	decfsz	??_Flash,f
   731     0342  2B41               	goto	u187
   732     0343  0BF9               	decfsz	??_Flash+1,f
   733     0344  2B41               	goto	u187
   734     0345  0BFA               	decfsz	??_Flash+2,f
   735     0346  2B41               	goto	u187
   736     0347  2B48               	nop2
   737     0348                     l728:
   738                           
   739                           ;main.c: 80:     PORTBbits.RB5 = 0;
   740     0348  1283               	bcf	3,5	;RP0=0, select bank0
   741     0349  1303               	bcf	3,6	;RP1=0, select bank0
   742     034A  1286               	bcf	6,5	;volatile
   743     034B                     l47:
   744     034B  0008               	return
   745     034C                     __end_of_Flash:
   746     007E                     btemp	set	126	;btemp
   747     007E                     wtemp0	set	126
   748                           
   749                           	psect	config
   750                           
   751                           ;Config register CONFIG @ 0x2007
   752                           ;	Oscillator Selection bits
   753                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
   754                           ;	Watchdog Timer Enable bit
   755                           ;	WDTE = OFF, WDT disabled
   756                           ;	Power-up Timer Enable bit
   757                           ;	PWRTE = ON, PWRT enabled
   758                           ;	RA5/MCLR/VPP Pin Function Select bit
   759                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
   760                           ;	Brown-out Detect Enable bit
   761                           ;	BOREN = ON, BOD enabled
   762                           ;	Low-Voltage Programming Enable bit
   763                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   764                           ;	Data EE Memory Code Protection bit
   765                           ;	CPD = OFF, Data memory code protection off
   766                           ;	Flash Program Memory Code Protection bit
   767                           ;	CP = OFF, Code protection off
   768     2007                     	org	8199
   769     2007  3F50               	dw	16208

Data Sizes:
    Strings     0
    Constant    8
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      13
    BANK0            80     13      13
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    UART_transmit@CMD	PTR unsigned char  size(1) Largest target is 8
		 -> pause_cmd(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_UART_transmit

Critical Paths under _main in BANK0

    _main->_UART_transmit

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     627
                              _Flash
                      _UART_transmit
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_transmit                                       18    15      3     627
                                              0 COMMON     5     2      3
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _Flash                                                3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Flash
   _UART_transmit
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      D       D       3       16.2%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      1A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      1A      10        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Jan 08 22:09:06 2024

                      pc 0002                       l35 036B                       l44 03F5  
                     l60 037C                       l54 0373                       l47 034B  
                     l58 0378                       u90 0395                       fsr 0004  
                    l724 0338                      l660 0350                      l726 033B  
                    l670 0357                      l662 0351                      l728 0348  
                    l760 03CD                      l752 039C                      l744 0391  
                    l680 0362                      l672 035A                      l664 0352  
                    l770 03E0                      l754 03A9                      l746 039A  
                    l690 036A                      l682 0366                      l674 035D  
                    l666 0353                      l658 034C                      l772 03E8  
                    l756 03AF                      l684 0367                      l676 035E  
                    l668 0356                      l766 03CF                      l758 03BC  
                    l686 0368                      l678 035F                      l782 0380  
                    l774 036C                      l768 03D7                      l688 0369  
                    l784 0385                      l776 036D                      l786 0386  
                    u100 03BC                      u101 03BB                      u110 03F5  
                    u111 03F4                      u120 0373                      u105 03B8  
                    u121 0372                      u130 0377                      u115 03F1  
                    u131 0376                      u140 037C                      u141 037B  
                    u150 0380                      u151 037F                      u160 038C  
                    u161 038B                      u177 03DB                      u187 0341  
                    fsr0 0004                      indf 0000                     _main 036C  
                   _init 034C                     btemp 007E                     start 0000  
                  ?_main 0078                    ?_init 0078                    _SPBRG 0099  
                  _TXREG 0019                    _Flash 0338                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 03F6  
           __end_of_main 038E             __end_of_init 036C                   ??_main 007D  
                 ??_init 0078                   ?_Flash 0078                   _TRISA0 0428  
                 _TRISA1 0429                   _TRISB0 0430                   _TRISB1 0431  
                 _TRISB2 0432                   _TRISA7 042F                   _TRISB5 0435  
__end_of__initialization 03FE            __end_of_Flash 034C           __pcstackCOMMON 0078  
                ??_Flash 0078    __end_of_UART_transmit 03F6               __pmaintext 036C  
             __stringtab 0001                _CMCONbits 001F                  __ptext1 034C  
                __ptext2 038E                  __ptext3 0338        __end_of_pause_cmd 000F  
   end_of_initialization 03FE                _RCSTAbits 0018                _PORTAbits 0005  
              _PORTBbits 0006    UART_transmit@feedback 0078                _TXSTAbits 0098  
    start_initialization 03F6              __pbssCOMMON 0070                ___latbits 0000  
          __pcstackBANK0 0020       UART_transmit@i_186 0028                __pstrings 0001  
              _pause_cmd 0007           UART_transmit@i 002A              __stringbase 0006  
          _UART_transmit 038E       __end_of__stringtab 0007        UART_transmit@F564 0070  
      UART_transmit@par1 0079        UART_transmit@par2 007A           ?_UART_transmit 0078  
       UART_transmit@CMD 002C         UART_transmit@cmd 0020                stringcode 0001  
               stringdir 0001                 stringtab 0001          ??_UART_transmit 007B  
